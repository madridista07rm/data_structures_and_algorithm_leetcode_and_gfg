class Solution {
public:
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        vector<int>inorder=preorder;
        sort(inorder.begin(),inorder.end());
        int i=0;
        int s=0;
        int e=inorder.size();
        TreeNode* temp=buildtree(preorder,inorder,s,e-1,i);
        return temp;
    }
    TreeNode* buildtree(vector<int>&preorder,vector<int>&inorder,int s,int e,int &i){
        if(s>e){
            return NULL;
        }
        TreeNode* root=new TreeNode(preorder[i]);
        int si=-1;
        for(int j=s;j<=e;j++){
            if(preorder[i]==inorder[j]){
                si=j;
                break;
            }
        }
            i++;
            root->left=buildtree(preorder,inorder,s,si-1,i);
            root->right=buildtree(preorder,inorder,si+1,e,i);
            return root;
    }
};
